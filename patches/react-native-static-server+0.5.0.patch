diff --git a/node_modules/react-native-static-server/android/build.gradle b/node_modules/react-native-static-server/android/build.gradle
index 0c7bca6..c94358b 100644
--- a/node_modules/react-native-static-server/android/build.gradle
+++ b/node_modules/react-native-static-server/android/build.gradle
@@ -10,18 +10,6 @@
 //   original location:
 //   - https://github.com/facebook/react-native/blob/0.58-stable/local-cli/templates/HelloWorld/android/app/build.gradle
 
-def DEFAULT_COMPILE_SDK_VERSION = 28
-def DEFAULT_BUILD_TOOLS_VERSION = '28.0.3'
-def DEFAULT_MIN_SDK_VERSION = 16
-def DEFAULT_TARGET_SDK_VERSION = 28
-
-def safeExtGet(prop, fallback) {
-    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
-}
-
-apply plugin: 'com.android.library'
-apply plugin: 'maven'
-
 buildscript {
     // The Android Gradle plugin is only required when opening the android folder stand-alone.
     // This avoids unnecessary downloads and potential conflicts when the library is included as a
@@ -38,8 +26,27 @@ buildscript {
     }
 }
 
-apply plugin: 'com.android.library'
-apply plugin: 'maven'
+plugins {
+    id('com.android.library')
+    id('maven-publish')
+}
+
+def DEFAULT_COMPILE_SDK_VERSION = 28
+def DEFAULT_BUILD_TOOLS_VERSION = '28.0.3'
+def DEFAULT_MIN_SDK_VERSION = 16
+def DEFAULT_TARGET_SDK_VERSION = 28
+
+def safeExtGet(prop, fallback) {
+    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
+}
+
+//apply plugin: 'com.android.library'
+//apply plugin: 'maven'
+
+
+
+//apply plugin: 'com.android.library'
+//apply plugin: 'maven'
 
 android {
     compileSdkVersion safeExtGet('compileSdkVersion', DEFAULT_COMPILE_SDK_VERSION)
@@ -105,47 +112,57 @@ def configureReactNativePom(def pom) {
     }
 }
 
-afterEvaluate { project ->
-    // some Gradle build hooks ref:
-    // https://www.oreilly.com/library/view/gradle-beyond-the/9781449373801/ch03.html
-    task androidJavadoc(type: Javadoc) {
-        source = android.sourceSets.main.java.srcDirs
-        classpath += files(android.bootClasspath)
-        classpath += files(project.getConfigurations().getByName('compile').asList())
-        include '**/*.java'
-    }
-
-    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
-        classifier = 'javadoc'
-        from androidJavadoc.destinationDir
-    }
-
-    task androidSourcesJar(type: Jar) {
-        classifier = 'sources'
-        from android.sourceSets.main.java.srcDirs
-        include '**/*.java'
-    }
-
-    android.libraryVariants.all { variant ->
-        def name = variant.name.capitalize()
-        def javaCompileTask = variant.javaCompileProvider.get()
-
-        task "jar${name}"(type: Jar, dependsOn: javaCompileTask) {
-            from javaCompileTask.destinationDir
-        }
-    }
-
-    artifacts {
-        archives androidSourcesJar
-        archives androidJavadocJar
-    }
-
-    task installArchives(type: Upload) {
-        configuration = configurations.archives
-        repositories.mavenDeployer {
-            // Deploy to react-native-event-bridge/maven, ready to publish to npm
-            repository url: "file://${projectDir}/../android/maven"
-            configureReactNativePom pom
-        }
-    }
-}
+//afterEvaluate { project ->
+//    // some Gradle build hooks ref:
+//    // https://www.oreilly.com/library/view/gradle-beyond-the/9781449373801/ch03.html
+//    task androidJavadoc(type: Javadoc) {
+//        source = android.sourceSets.main.java.srcDirs
+//        classpath += files(android.bootClasspath)
+//        project.getConfigurations().getByName('implementation').setCanBeResolved(true)
+//        classpath += files(project.getConfigurations().getByName('implementation').asList())
+//        include '**/*.java'
+//    }
+//
+//    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
+//        classifier = 'javadoc'
+//        from androidJavadoc.destinationDir
+//    }
+//
+//    task androidSourcesJar(type: Jar) {
+//        classifier = 'sources'
+//        from android.sourceSets.main.java.srcDirs
+//        include '**/*.java'
+//    }
+//
+//    android.libraryVariants.all { variant ->
+//        def name = variant.name.capitalize()
+//        def javaCompileTask = variant.javaCompileProvider.get()
+//
+//        task "jar${name}"(type: Jar, dependsOn: javaCompileTask) {
+//            from javaCompileTask.destinationDir
+//        }
+//    }
+//
+//    artifacts {
+//        archives androidSourcesJar
+//        archives androidJavadocJar
+//    }
+//
+//    task installArchives(type: Upload) {
+//        configuration = configurations.archives
+////        repositories.mavenDeployer {
+////            // Deploy to react-native-event-bridge/maven, ready to publish to npm
+////            repository url: "file://${projectDir}/../android/maven"
+////            configureReactNativePom pom
+////        }
+//
+//        repositories {
+//            maven {
+//                url = "file://${projectDir}/../android/maven"
+//                configureReactNativePom pom
+//            }
+//        }
+//    }
+//
+//
+//}
\ No newline at end of file
